{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/list/list.component.css","webpack:///./src/app/list/list.component.html","webpack:///./src/app/list/list.component.ts","webpack:///./src/app/new/new.component.css","webpack:///./src/app/new/new.component.html","webpack:///./src/app/new/new.component.ts","webpack:///./src/app/pagenotfound/pagenotfound.component.css","webpack:///./src/app/pagenotfound/pagenotfound.component.html","webpack:///./src/app/pagenotfound/pagenotfound.component.ts","webpack:///./src/app/view/view.component.css","webpack:///./src/app/view/view.component.html","webpack:///./src/app/view/view.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { NewComponent } from './new/new.component';\nimport { EditComponent } from './edit/edit.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\nimport { ListComponent } from './list/list.component';\nimport { ViewComponent } from './view/view.component';\nconst routes: Routes = [\n  { path: 'new', component: NewComponent },\n  { path: 'details/:id', component: ViewComponent },\n  { path: 'edit/:id', component: EditComponent },\n  // { path: 'newquote/:id', component: QuoteNewComponent },\n  // use a colon and parameter name to include a parameter in the url\n  // redirect to /alpha if there is nothing in the url\n  { path: '', pathMatch: 'full', component: ListComponent },\n  // the ** will catch anything that did not match any of the above routes\n  { path: '**', component: ListComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"h1{\\r\\n    margin-top: 20px;\\r\\n    font-weight: bold;\\r\\n}\"","module.exports = \"<div class=\\\"row text-center\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <h1>\\n      {{ title }}\\n    </h1>\\n  </div>\\n</div>\\n\\n<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Pet Shelter';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';//\nimport { HttpService } from './http.service';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NewComponent } from './new/new.component';\nimport { ListComponent } from './list/list.component';\nimport { EditComponent } from './edit/edit.component';\nimport { ViewComponent } from './view/view.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NewComponent,\n    ListComponent,\n    EditComponent,\n    ViewComponent,\n    PagenotfoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".box{\\r\\n    border: 1px solid grey;\\r\\n    padding: 40px;\\r\\n    border-top-right-radius: 15px;\\r\\n    border-top-left-radius: 15px;\\r\\n    margin-bottom: 30px;\\r\\n    box-shadow: 5px 10px #888888;\\r\\n}\\r\\n\\r\\n.buttons{\\r\\n    margin-top: 20px;\\r\\n}\\r\\n\\r\\n.form{\\r\\n    margin-top: 30px;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"editPet\\\">\\n    <div class=\\\"row text-center\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <h3>Know of a pet needing a home? </h3>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <span [hidden]=\\\"!errors.name\\\" class=\\\"text-danger\\\">{{errors.name.message}}</span>\\n    </div>\\n    <div class=\\\"row form\\\">\\n      <div class=\\\"col-md-3\\\"></div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"box text-center\\\">\\n          <form (submit)=\\\"onSubmit(editPet._id)\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12 text-left\\\">\\n                <label>Pet Name:</label>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <input type=\\\"text\\\" required minlength=\\\"3\\\" name=\\\"editPet.name\\\" [(ngModel)]=\\\"editPet.name\\\" #name=\\\"ngModel\\\" class=\\\"form-control\\\">\\n                <!-- <span [hidden]=\\\"!errors.name || name.valid\\\" class=\\\"text-danger\\\">{{errors.name.message}}</span> -->\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div *ngIf=\\\"name.invalid && (name.dirty || !name.untouched)\\\" class=\\\"col-md-12 alert alert-danger\\\">\\n                <div *ngIf=\\\"name.errors.required\\\">Name is required!</div>\\n                <div *ngIf=\\\"name.errors.minlength\\\">Name must be at least 3 charaters long</div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12 text-left\\\">\\n                <label>Pet type:</label>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <input type=\\\"text\\\" required minlength=\\\"3\\\" name=\\\"editPet.petType\\\" [(ngModel)]=\\\"editPet.petType\\\" #pettype=\\\"ngModel\\\" class=\\\"form-control\\\">\\n                <!-- <span [hidden]=\\\"!errors.pettype || pettype.valid\\\" class=\\\"text-danger\\\">{{errors.pettype.message}}</span> -->\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div *ngIf=\\\"!pettype.valid && (pettype.dirty || !pettype.untouched)\\\" class=\\\"col-md-12 alert alert-danger\\\">\\n                <div *ngIf=\\\"pettype.errors.required\\\">Type is required!</div>\\n                <div *ngIf=\\\"pettype.errors.minlength\\\">Type must be at least 3 charaters long</div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12 text-left\\\">\\n                <label>Description:</label>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <input type=\\\"text\\\" required minlength=\\\"3\\\" name=\\\"editPet.description\\\" [(ngModel)]=\\\"editPet.description\\\" #description=\\\"ngModel\\\"\\n                  class=\\\"form-control\\\">\\n                <!-- <span [hidden]=\\\"!errors.description || description.valid\\\" class=\\\"text-danger\\\">{{errors.description.message}}</span> -->\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div *ngIf=\\\"description.invalid && (description.dirty || !description.untouched)\\\" class=\\\"col-md-12 alert alert-danger\\\">\\n                <div *ngIf=\\\"description.errors.required\\\">Description is required!</div>\\n                <div *ngIf=\\\"description.errors.minlength\\\">Description must be at least 3 charaters long</div>\\n              </div>\\n            </div>\\n            <div class=\\\"row text-left\\\">\\n              <div class=\\\"col-md-12\\\">Skills:</div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-2\\\">Skill1:</div>\\n              <div class=\\\"col-md-10\\\">\\n                <input type=\\\"text\\\" name=\\\"skill1\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"skill1\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-2\\\">Skill2:</div>\\n              <div class=\\\"col-md-10\\\">\\n                <input type=\\\"text\\\" name=\\\"skill2\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"skill2\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-2\\\">Skill3:</div>\\n              <div class=\\\"col-md-10\\\">\\n                <input type=\\\"text\\\" name=\\\"skill3\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"skill3\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"row buttons\\\">\\n              <div class=\\\"col-md-6\\\">\\n                <input type=\\\"submit\\\" class=\\\"btn btn-success form-control\\\" [disabled]=\\\"!name.valid\\\" value=\\\"submit\\\">\\n              </div>\\n              <div class=\\\"col-md-6\\\">\\n                <button [routerLink]=\\\"['/details/' +editPet._id ]\\\" class=\\\"btn btn-danger form-control\\\">Cancel</button>\\n  \\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\"></div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  id: any;\n  editPet;\n  thisPet;\n  message = \"\";\n  errors = { name: \"\" };\n  skill1: any;\n  skill2: any;\n  skill3: any;\n  allskills: any;\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params) => (this.id = params['id']));\n    this.getEditPet(this.id);\n    this.editPet = {\n      name: \"\",\n      petType: \"\",\n      description: \"\",\n      skills: []\n    };\n  }\n\n  getEditPet(id) {\n    console.log('edit id ', id)\n    let editing = this._httpService.getPet(this.id);\n    editing.subscribe(data => {\n      this.editPet = data['data'];\n      console.log(this.editPet);\n      this.skill1 = this.editPet.skills[0];\n      this.skill2 = this.editPet.skills[1];\n      this.skill3 = this.editPet.skills[2];\n    })\n    // this._httpService.getPet(id).subscribe(data=>{\n    //   this.editPet = data;\n    // })\n  }\n\n  onSubmit(id: String) {\n    this.editPet.skills[0] = this.skill1;\n    this.editPet.skills[1] = this.skill2;\n    this.editPet.skills[2] = this.skill3;\n    console.log(this.editPet)\n    let update = this._httpService.updatePet(this.editPet, id);\n    update.subscribe(data => {\n      console.log(\"submited form\")\n      console.log(data);\n      this.message = data[\"message\"];\n      if (data['message'] === \"Success\") {\n        this.message = this.editPet.name + \"added updated!\";\n        this._router.navigate(['/details/' + id]);\n      } else {\n        if (data['error'].errors['name']) {\n          this.errors.name = data['error'].errors['name'];\n        }\n      }\n    })\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n\n  constructor(private _http: HttpClient) {\n    this.getPets();\n  }\n\n  getPets(): any {\n    return this._http.get('/pets');\n  }\n\n  getPet(id: String) {\n    return this._http.get('/pets/' + id);\n  }\n\n  addPet(newPet) {\n    return this._http.post('/pets', newPet);\n  }\n\n  likePet(id: String,  pet){\n    return this._http.post('/pet/'+ id, pet);\n  }\n\n  updatePet(updateInfo, id: String) {\n    return this._http.put('/pets/' + id, updateInfo);\n  }\n\n  deletePet(id: String) {\n    return this._http.delete('/pets/' + id);\n  }\n}\n","module.exports = \".btn-outline-success{\\r\\n    margin-bottom: 20px;\\r\\n}\"","module.exports = \"\\n<h5>These pets are looking for a home!</h5>\\n<div class=\\\"row text-right\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <u>\\n      <button [routerLink]=\\\"['/new']\\\" class=\\\"btn btn-outline-success\\\">Add a pet to the shelter</button>\\n    </u>\\n  </div>\\n</div>\\n<table class=\\\"text-center table table-striped\\\">\\n  <thead>\\n    <tr>\\n      <th>Name</th>\\n      <th>Type</th>\\n      <th>Actions</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let pet of Pets\\\">\\n      <td>{{pet.name}}</td>\\n      <td>{{pet.petType}}</td>\\n      <td>\\n        <button [routerLink]=\\\"['/details/', pet._id]\\\" class=\\\"btn btn-primary\\\">Details</button>\\n        <!-- <button (click)=\\\"delete(author._id)\\\">Delete</button> -->\\n        <button [routerLink]=\\\"['/edit/', pet._id]\\\" class=\\\"btn btn-warning\\\">Edit</button>\\n        <button (click)=\\\"delete(pet._id)\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  Pets: any;\n  newPet: any;\n  editPet;\n  constructor(private _httpService: HttpService) { }\n\n  ngOnInit() {\n    this.newPet = {\n      name: \"\",\n      petType: \"\",\n      description: \"\",\n      skills: []\n    };\n    this.getAllPets();\n  }\n\n  getAllPets(){\n    let Pets = this._httpService.getPets().subscribe(data=>{\n      console.log(\"get all Pet\");\n      console.log(data);\n      this.Pets = data['data'];\n    });\n\n  }\n\n  edit(id){\n    let edit = this._httpService.getPet(id).subscribe(data=>{\n      this.editPet = data;\n    })\n  }\n\n  delete(id){\n    let deletePet = this._httpService.deletePet(id).subscribe(data=>{\n      console.log(data);\n    });\n    this.getAllPets()\n  }\n\n}\n","module.exports = \".box{\\r\\n    border: 1px solid grey;\\r\\n    padding: 40px;\\r\\n    border-top-right-radius: 15px;\\r\\n    border-top-left-radius: 15px;\\r\\n    margin-bottom: 30px;\\r\\n    box-shadow: 5px 10px #888888;\\r\\n}\\r\\n\\r\\n.buttons{\\r\\n    margin-top: 20px;\\r\\n}\\r\\n\\r\\n.form{\\r\\n    margin-top: 30px;\\r\\n}\"","module.exports = \"<div class=\\\"row text-center\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h3>Know of a pet needing a home? </h3>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <span [hidden]=\\\"!errors.name\\\" class=\\\"text-danger\\\">*{{errors.name.message}}</span>\\n  </div>\\n  <div class=\\\"row form\\\">\\n    <div class=\\\"col-md-3 col-1\\\"></div>\\n    <div class=\\\"col-md-6 col-10\\\">\\n      <div class=\\\"box text-center\\\">\\n        <form (submit)=\\\"onSubmit()\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12 text-left\\\">\\n              <label>Pet Name:</label>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <input type=\\\"text\\\" required minlength=\\\"3\\\" name=\\\"newPet.name\\\" [(ngModel)]=\\\"newPet.name\\\" #name=\\\"ngModel\\\" class=\\\"form-control\\\">\\n              <!-- <span [hidden]=\\\"!errors.name || name.valid\\\" class=\\\"text-danger\\\">{{errors.name.message}}</span> -->\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div *ngIf=\\\"name.invalid && (name.dirty || !name.untouched)\\\" class=\\\"col-md-12 alert alert-danger\\\">\\n              <div *ngIf=\\\"name.errors.required\\\">Name is required!</div>\\n              <div *ngIf=\\\"name.errors.minlength\\\">Name must be at least 3 charaters long</div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12 text-left\\\">\\n              <label>Pet type:</label>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <input type=\\\"text\\\" required minlength=\\\"3\\\" name=\\\"newPet.petType\\\" [(ngModel)]=\\\"newPet.petType\\\" #pettype=\\\"ngModel\\\" class=\\\"form-control\\\">\\n              <!-- <span [hidden]=\\\"!errors.pettype || pettype.valid\\\" class=\\\"text-danger\\\">{{errors.pettype.message}}</span> -->\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div *ngIf=\\\"pettype.invalid && (pettype.dirty || !pettype.untouched)\\\" class=\\\"col-md-12 alert alert-danger\\\">\\n              <div *ngIf=\\\"pettype.errors.required\\\">Type is required!</div>\\n              <div *ngIf=\\\"pettype.errors.minlength\\\">Type must be at least 3 charaters long</div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12 text-left\\\">\\n              <label>Description:</label>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <input type=\\\"text\\\" required minlength=\\\"3\\\" name=\\\"newPet.description\\\" [(ngModel)]=\\\"newPet.description\\\" #description=\\\"ngModel\\\"\\n                class=\\\"form-control\\\">\\n              <!-- <span [hidden]=\\\"!errors.description || description.valid\\\" class=\\\"text-danger\\\">{{errors.description.message}}</span> -->\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div *ngIf=\\\"description.invalid && (description.dirty || !description.untouched)\\\" class=\\\"col-md-12 alert alert-danger\\\">\\n              <div *ngIf=\\\"description.errors.required\\\">Description is required!</div>\\n              <div *ngIf=\\\"description.errors.minlength\\\">Description must be at least 3 charaters long</div>\\n            </div>\\n          </div>\\n          <div class=\\\"row text-left\\\">\\n            <div class=\\\"col-md-12\\\">Skills (optional): </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2\\\">Skill1: </div>\\n            <div class=\\\"col-md-10\\\">\\n              <input type=\\\"text\\\" name=\\\"skill1\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"skill1\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2\\\">Skill2: </div>\\n            <div class=\\\"col-md-10\\\">\\n              <input type=\\\"text\\\" name=\\\"skill2\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"skill2\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2\\\">Skill3: </div>\\n            <div class=\\\"col-md-10\\\">\\n              <input type=\\\"text\\\" name=\\\"skill3\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"skill3\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"row buttons\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <input type=\\\"submit\\\" class=\\\"btn btn-success form-control\\\" [disabled]=\\\"!name.valid\\\" value=\\\"submit\\\">\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <button [routerLink]=\\\"['/']\\\" class=\\\"btn btn-danger form-control\\\">Cancel</button>\\n  \\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-3 col-1\\\"></div>\\n  </div>\"","\nimport { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.css']\n})\nexport class NewComponent implements OnInit {\n  newPet;\n  message = \"\";\n  errors = { name: \"\" } ;\n  skill1: any;\n  skill2: any;\n  skill3: any;\n  allskills: any;\n  \n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router) { }\n\n  ngOnInit() {\n    this.newPet = {\n      name: \"\",\n      petType: \"\",\n      description: \"\",\n      skills: []\n    };\n  }\n\n  onSubmit(){\n    this.allskills=[this.skill1, this.skill2, this.skill3,] \n    this.newPet.skills = this.allskills;\n    \n    console.log(this.newPet.skills)\n    console.log(this.skill1, this.skill2, this.skill3)\n    let addPet = this._httpService.addPet(this.newPet).subscribe(data=>{\n      console.log(data);\n      console.log(\"New Pet added\");\n      console.log(\"This is the message from data\", data[\"message\"]);\n      this.message = data[\"message\"];\n      if(data['message'] === \"Success\"){\n        this.message = this.newPet.name + \"added successfully!\";\n        this._router.navigate(['/']);\n      }else{\n        if (data['error'].errors['name']) {\n          console.log(\"print this when error\" ,data['error'])\n          this.errors.name = data['error'].errors['name'];\n        }\n      }\n    })\n    \n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n    We're sorry, but we could not find the pet you are looking for. Would you like to add this pet to our database?\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pagenotfound',\n  templateUrl: './pagenotfound.component.html',\n  styleUrls: ['./pagenotfound.component.css']\n})\nexport class PagenotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".row{\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\nh3{\\r\\n    margin-bottom: 20px;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"thisPet\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-8\\\"></div>\\n      <div class=\\\"col-md-2\\\">\\n        <button [routerLink]=\\\"['/']\\\" class=\\\"btn btn-outline-success form-control\\\">Home</button>\\n      </div>\\n      <!-- <div class=\\\"col-md-2\\\">\\n        <a [routerLink]=\\\"['/newquote/', thisAuthor._id]\\\" class=\\\"btn btn-outline-success form-control\\\">Add a quote</a>\\n      </div> -->\\n      <div class=\\\"col-md-4\\\"></div>\\n    </div>\\n  \\n    <h3>Details about {{thisPet.name}} </h3>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3 col-6 text-center\\\">\\n        <h4>Pet type:</h4>\\n      </div>\\n      <div class=\\\"col-md-9 col-6\\\">\\n        {{thisPet.petType}}\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3 col-6 text-center\\\">\\n        <h4>Description:</h4>\\n      </div>\\n      <div class=\\\"col-md-9 col-6\\\">\\n        {{thisPet.description}}\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3 col-6 text-center\\\">\\n        <h4>Skills:</h4>\\n      </div>\\n      <div class=\\\"col-md-9 col-6\\\">\\n        <div *ngFor=\\\"let skill of thisPet.skills\\\">\\n          <p *ngIf=\\\"skill\\\">{{skill}}</p>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3 col-6 text-center\\\">\\n        <h4>Likes:</h4>\\n      </div>\\n      <div class=\\\"col-md-9 col-6\\\">\\n        {{thisPet.likes}}\\n      </div>\\n    </div>\\n    <div class=\\\"row text-center\\\">\\n      <div class=\\\"col-md-3 col-6\\\"><button onclick=\\\"this.disabled=true\\\" (click)=\\\"like(thisPet._id)\\\" class=\\\"btn btn-success\\\">Like this Pet</button></div>\\n      <div class=\\\"col-md-3 col-6\\\"><button (click)=\\\"delete()\\\" class=\\\"btn btn-primary\\\">Adopt this Pet!</button></div>\\n    </div>\\n    \\n  \"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.css']\n})\nexport class ViewComponent implements OnInit {\n  id: String;\n  thisPet;\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router) { }\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params) => (this.id = params['id']));\n    let Pet = this._httpService.getPet(this.id).subscribe(data => {\n      console.log(data);\n      this.thisPet = data['data'];\n    })\n  }\n\n  like(petId) {\n    console.log(\"voteUp\")\n    let voted = this._httpService.likePet(petId,\n      {\"voteVal\": 1 }).subscribe(data => {\n        this.thisPet = data['data'];\n      });\n  }\n\n  delete() {\n    let deletequote = this._httpService.deletePet(this.thisPet._id)\n      .subscribe(data => {\n        this.thisPet = data['data'];\n        this._router.navigate(['/']);\n      });\n      \n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}